name: Deploy to Fly.io

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'pip'  # üöÄ Enables pip cache

      - name: Ensure pip cache dir exists
        run: mkdir -p ~/.cache/pip  # ‚úÖ Fix for pip cache warning

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy using the new volume
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          # Setting the correct volume name
          volume_name="pg_data"
          echo "üîÅ Trying to deploy with volume: $volume_name"
          
          # Update fly.toml with correct volume name
          sed -i "s/source = \".*\"/source = \"$volume_name\"/" fly.toml

          # Deploying with the updated fly.toml configuration
          if flyctl deploy --remote-only; then
            echo "‚úÖ Successfully deployed using volume: $volume_name"
          else
            echo "‚ùå Failed to deploy with volume: $volume_name"
            exit 1
          fi

      - name: Set environment variable for Postgres data
        run: flyctl secrets set DATABASE_URL=postgres://postgres:your_password@localhost:5432/postgres
